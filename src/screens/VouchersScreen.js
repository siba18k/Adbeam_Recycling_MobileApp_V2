import React, { useState, useEffect } from 'react';
import {
    View,
    StyleSheet,
    ScrollView,
    RefreshControl,
    SafeAreaView,
    TouchableOpacity,
    Share,
    Alert,
    Dimensions
} from 'react-native';
import {
    Text,
    Card,
    ActivityIndicator,
} from 'react-native-paper';
import { Ionicons } from '@expo/vector-icons';
import { LinearGradient } from 'expo-linear-gradient';
import QRCode from 'react-native-qrcode-svg';
import { useAuth } from '../context/AuthContext';
import { getUserVouchers } from '../services/database';
import { colors, gradients } from '../theme/colors';

const { width } = Dimensions.get('window');

export default function VouchersScreen({ navigation }) {
    const { user, userProfile } = useAuth();
    const [vouchers, setVouchers] = useState([]);
    const [isLoading, setIsLoading] = useState(true);
    const [isRefreshing, setIsRefreshing] = useState(false);
    const [expandedVoucher, setExpandedVoucher] = useState(null);

    const loadVouchers = async () => {
        if (!user) return;

        try {
            setIsLoading(true);
            const result = await getUserVouchers(user.uid);

            if (result.success) {
                setVouchers(result.data);
            } else {
                console.error('Failed to load vouchers:', result.error);
                // Show empty state instead of error for better UX
                setVouchers([]);
            }
        } catch (error) {
            console.error('Error loading vouchers:', error);
            setVouchers([]);
        } finally {
            setIsLoading(false);
        }
    };

    useEffect(() => {
        loadVouchers();
    }, [user]);

    const handleRefresh = async () => {
        setIsRefreshing(true);
        await loadVouchers();
        setIsRefreshing(false);
    };

    const shareVoucher = async (voucher) => {
        try {
            const message = `My Adbeam Recycling Voucher\n\nReward: ${voucher.rewardName}\nCode: ${voucher.voucherCode}\nPoints Used: ${voucher.pointsCost}\n\nGenerated by Adbeam Recycling App`;

            await Share.share({
                message: message,
                title: 'My Eco Reward Voucher'
            });
        } catch (error) {
            console.error('Share error:', error);
        }
    };

    const getStatusColor = (status) => {
        switch (status) {
            case 'active': return gradients.success;
            case 'redeemed': return [colors.text.secondary, colors.text.light];
            case 'expired': return ['#ef4444', '#dc2626'];
            default: return gradients.primary;
        }
    };

    const getStatusIcon = (status) => {
        switch (status) {
            case 'active': return 'qr-code-outline';
            case 'redeemed': return 'checkmark-circle-outline';
            case 'expired': return 'time-outline';
            default: return 'help-circle-outline';
        }
    };

    const getStatusText = (status) => {
        switch (status) {
            case 'active': return 'Ready to Use';
            case 'redeemed': return 'Redeemed';
            case 'expired': return 'Expired';
            default: return 'Unknown';
        }
    };

    const isVoucherExpired = (voucher) => {
        if (voucher.status === 'redeemed') return false;
        const now = new Date();
        const expiryDate = new Date(voucher.expiresAt || Date.now() + 30*24*60*60*1000);
        return now > expiryDate;
    };

    if (isLoading) {
        return (
            <SafeAreaView style={styles.loadingContainer}>
                <LinearGradient colors={gradients.backgroundNeutral} style={styles.gradient}>
                    <View style={styles.loadingContent}>
                        <ActivityIndicator size="large" color={colors.primary.main} />
                        <Text style={styles.loadingText}>Loading your vouchers...</Text>
                    </View>
                </LinearGradient>
            </SafeAreaView>
        );
    }

    return (
        <SafeAreaView style={styles.container}>
            <LinearGradient colors={gradients.backgroundNeutral} style={styles.gradient}>
                {/* Header */}
                <LinearGradient
                    colors={gradients.backgroundPrimary}
                    style={styles.header}
                >
                    <View style={styles.headerContent}>
                        <Text style={styles.headerTitle}>My Vouchers</Text>
                        <Text style={styles.headerSubtitle}>
                            {vouchers.length} voucher{vouchers.length !== 1 ? 's' : ''}
                        </Text>
                    </View>
                    <View style={styles.headerIcon}>
                        <Ionicons name="qr-code-outline" size={40} color="white" />
                    </View>
                </LinearGradient>

                <ScrollView
                    style={styles.scrollView}
                    contentContainerStyle={styles.scrollContent}
                    refreshControl={
                        <RefreshControl refreshing={isRefreshing} onRefresh={handleRefresh} />
                    }
                    showsVerticalScrollIndicator={false}
                >
                    {vouchers.length > 0 ? (
                        <View style={styles.vouchersGrid}>
                            {vouchers.map((voucher) => {
                                const isExpired = isVoucherExpired(voucher);
                                const currentStatus = isExpired && voucher.status === 'active' ? 'expired' : voucher.status;
                                const isExpanded = expandedVoucher === voucher.id;

                                return (
                                    <Card key={voucher.id} style={styles.voucherCard}>
                                        <TouchableOpacity
                                            onPress={() => setExpandedVoucher(isExpanded ? null : voucher.id)}
                                            activeOpacity={0.8}
                                        >
                                            <LinearGradient
                                                colors={getStatusColor(currentStatus)}
                                                style={styles.voucherHeader}
                                            >
                                                <View style={styles.voucherHeaderContent}>
                                                    <View style={styles.voucherInfo}>
                                                        <Text style={styles.voucherRewardName} numberOfLines={2}>
                                                            {voucher.rewardName}
                                                        </Text>
                                                        <Text style={styles.voucherCode}>
                                                            Code: {voucher.voucherCode}
                                                        </Text>
                                                        <View style={styles.voucherMeta}>
                                                            <View style={styles.pointsBadge}>
                                                                <Ionicons name="star" size={12} color="white" />
                                                                <Text style={styles.pointsText}>{voucher.pointsCost} pts</Text>
                                                            </View>
                                                            <View style={styles.statusBadge}>
                                                                <Ionicons name={getStatusIcon(currentStatus)} size={12} color="white" />
                                                                <Text style={styles.statusText}>{getStatusText(currentStatus)}</Text>
                                                            </View>
                                                        </View>
                                                    </View>

                                                    <View style={styles.voucherActions}>
                                                        <Ionicons
                                                            name={isExpanded ? 'chevron-up' : 'chevron-down'}
                                                            size={24}
                                                            color="white"
                                                        />
                                                    </View>
                                                </View>
                                            </LinearGradient>
                                        </TouchableOpacity>

                                        {/* Expanded QR Code Section */}
                                        {isExpanded && (
                                            <View style={styles.voucherBody}>
                                                {currentStatus === 'active' ? (
                                                    <View style={styles.qrSection}>
                                                        <Text style={styles.qrTitle}>Show this QR code to redeem</Text>

                                                        <View style={styles.qrContainer}>
                                                            <LinearGradient
                                                                colors={[colors.surface.white, colors.surface.light]}
                                                                style={styles.qrBackground}
                                                            >
                                                                <QRCode
                                                                    value={voucher.voucherCode}
                                                                    size={160}
                                                                    color={colors.text.primary}
                                                                    backgroundColor="transparent"
                                                                />
                                                            </LinearGradient>
                                                        </View>

                                                        <Text style={styles.qrCode}>{voucher.voucherCode}</Text>

                                                        <View style={styles.qrActions}>
                                                            <TouchableOpacity
                                                                style={styles.shareButton}
                                                                onPress={() => shareVoucher(voucher)}
                                                            >
                                                                <LinearGradient
                                                                    colors={gradients.accent}
                                                                    style={styles.shareButtonGradient}
                                                                >
                                                                    <Ionicons name="share-outline" size={16} color="white" />
                                                                    <Text style={styles.shareButtonText}>Share</Text>
                                                                </LinearGradient>
                                                            </TouchableOpacity>
                                                        </View>

                                                        {/* Expiry Info */}
                                                        <View style={styles.expiryInfo}>
                                                            <Ionicons name="time-outline" size={14} color={colors.text.secondary} />
                                                            <Text style={styles.expiryText}>
                                                                Valid until {new Date(voucher.expiresAt || Date.now() + 30*24*60*60*1000).toLocaleDateString()}
                                                            </Text>
                                                        </View>
                                                    </View>
                                                ) : (
                                                    <View style={styles.redeemedSection}>
                                                        <View style={styles.redeemedIcon}>
                                                            <LinearGradient
                                                                colors={currentStatus === 'redeemed' ? gradients.success : ['#ef4444', '#dc2626']}
                                                                style={styles.redeemedIconGradient}
                                                            >
                                                                <Ionicons
                                                                    name={currentStatus === 'redeemed' ? 'checkmark-circle-outline' : 'time-outline'}
                                                                    size={40}
                                                                    color="white"
                                                                />
                                                            </LinearGradient>
                                                        </View>
                                                        <Text style={styles.redeemedTitle}>
                                                            {currentStatus === 'redeemed' ? 'Voucher Redeemed!' : 'Voucher Expired'}
                                                        </Text>
                                                        <Text style={styles.redeemedSubtitle}>
                                                            {currentStatus === 'redeemed'
                                                                ? 'This voucher has been successfully used'
                                                                : 'This voucher is no longer valid'
                                                            }
                                                        </Text>
                                                        {voucher.redeemedAt && (
                                                            <Text style={styles.redeemedDate}>
                                                                Redeemed on {new Date(voucher.redeemedAt).toLocaleDateString()}
                                                            </Text>
                                                        )}
                                                    </View>
                                                )}
                                            </View>
                                        )}
                                    </Card>
                                );
                            })}
                        </View>
                    ) : (
                        <View style={styles.emptyState}>
                            <LinearGradient
                                colors={[colors.primary.light + '40', colors.primary.light + '20']}
                                style={styles.emptyIconContainer}
                            >
                                <Ionicons name="qr-code-outline" size={60} color={colors.primary.main} />
                            </LinearGradient>
                            <Text style={styles.emptyTitle}>No Vouchers Yet</Text>
                            <Text style={styles.emptySubtitle}>
                                Redeem rewards to get voucher codes that you can use on campus
                            </Text>
                            <TouchableOpacity
                                style={styles.rewardsButton}
                                onPress={() => navigation.navigate('Rewards')}
                            >
                                <LinearGradient
                                    colors={gradients.primary}
                                    style={styles.rewardsButtonGradient}
                                >
                                    <Ionicons name="gift-outline" size={20} color="white" />
                                    <Text style={styles.rewardsButtonText}>Browse Rewards</Text>
                                </LinearGradient>
                            </TouchableOpacity>
                        </View>
                    )}

                    {/* Instructions Card */}
                    <Card style={styles.instructionsCard}>
                        <LinearGradient
                            colors={[colors.accent.main, colors.accent.light]}
                            style={styles.instructionsGradient}
                        >
                            <View style={styles.instructionsHeader}>
                                <Ionicons name="information-circle-outline" size={24} color="white" />
                                <Text style={styles.instructionsTitle}>How to Use Vouchers</Text>
                            </View>
                            <View style={styles.instructionsList}>
                                <View style={styles.instructionItem}>
                                    <Text style={styles.instructionNumber}>1</Text>
                                    <Text style={styles.instructionText}>Redeem a reward to get a voucher QR code</Text>
                                </View>
                                <View style={styles.instructionItem}>
                                    <Text style={styles.instructionNumber}>2</Text>
                                    <Text style={styles.instructionText}>Show the QR code at the campus office</Text>
                                </View>
                                <View style={styles.instructionItem}>
                                    <Text style={styles.instructionNumber}>3</Text>
                                    <Text style={styles.instructionText}>Staff will scan it to complete redemption</Text>
                                </View>
                                <View style={styles.instructionItem}>
                                    <Text style={styles.instructionNumber}>4</Text>
                                    <Text style={styles.instructionText}>Receive your reward and a notification!</Text>
                                </View>
                            </View>
                        </LinearGradient>
                    </Card>
                </ScrollView>
            </LinearGradient>
        </SafeAreaView>
    );
}

// Add all the styles (same as before but ensure they're complete)
const styles = StyleSheet.create({
    container: {
        flex: 1,
    },
    gradient: {
        flex: 1,
    },
    loadingContainer: {
        flex: 1,
    },
    loadingContent: {
        flex: 1,
        justifyContent: 'center',
        alignItems: 'center',
    },
    loadingText: {
        fontSize: 16,
        color: colors.text.secondary,
        fontWeight: '500',
        marginTop: 16,
    },
    header: {
        flexDirection: 'row',
        justifyContent: 'space-between',
        alignItems: 'center',
        padding: 20,
        paddingBottom: 30,
    },
    headerContent: {
        flex: 1,
    },
    headerTitle: {
        fontSize: 24,
        fontWeight: '700',
        color: 'white',
        marginBottom: 4,
    },
    headerSubtitle: {
        fontSize: 16,
        color: 'rgba(255,255,255,0.9)',
        fontWeight: '500',
    },
    headerIcon: {
        marginLeft: 16,
    },
    scrollView: {
        flex: 1,
    },
    scrollContent: {
        padding: 16,
        paddingTop: 0,
    },
    vouchersGrid: {
        gap: 16,
    },
    voucherCard: {
        borderRadius: 16,
        overflow: 'hidden',
        elevation: 4,
        shadowColor: colors.shadow.light,
        shadowOffset: { width: 0, height: 4 },
        shadowOpacity: 0.1,
        shadowRadius: 8,
    },
    voucherHeader: {
        padding: 16,
    },
    voucherHeaderContent: {
        flexDirection: 'row',
        justifyContent: 'space-between',
        alignItems: 'center',
    },
    voucherInfo: {
        flex: 1,
    },
    voucherRewardName: {
        fontSize: 16,
        fontWeight: '700',
        color: 'white',
        marginBottom: 4,
    },
    voucherCode: {
        fontSize: 12,
        color: 'rgba(255,255,255,0.9)',
        fontFamily: 'monospace',
        marginBottom: 8,
    },
    voucherMeta: {
        flexDirection: 'row',
        gap: 8,
    },
    pointsBadge: {
        flexDirection: 'row',
        alignItems: 'center',
        backgroundColor: 'rgba(255,255,255,0.2)',
        paddingHorizontal: 8,
        paddingVertical: 4,
        borderRadius: 12,
    },
    pointsText: {
        color: 'white',
        fontSize: 10,
        fontWeight: '700',
        marginLeft: 4,
    },
    statusBadge: {
        flexDirection: 'row',
        alignItems: 'center',
        backgroundColor: 'rgba(255,255,255,0.3)',
        paddingHorizontal: 8,
        paddingVertical: 4,
        borderRadius: 12,
    },
    statusText: {
        color: 'white',
        fontSize: 10,
        fontWeight: '700',
        marginLeft: 4,
    },
    voucherActions: {
        marginLeft: 12,
    },
    voucherBody: {
        backgroundColor: colors.surface.white,
        padding: 20,
    },
    qrSection: {
        alignItems: 'center',
    },
    qrTitle: {
        fontSize: 16,
        fontWeight: '600',
        color: colors.text.primary,
        marginBottom: 20,
        textAlign: 'center',
    },
    qrContainer: {
        padding: 20,
        borderRadius: 16,
        marginBottom: 16,
        shadowColor: colors.shadow.light,
        shadowOffset: { width: 0, height: 4 },
        shadowOpacity: 0.1,
        shadowRadius: 8,
        elevation: 4,
    },
    qrBackground: {
        padding: 20,
        borderRadius: 12,
        alignItems: 'center',
    },
    qrCode: {
        fontSize: 14,
        fontWeight: '700',
        color: colors.text.primary,
        fontFamily: 'monospace',
        letterSpacing: 2,
        marginBottom: 20,
    },
    qrActions: {
        flexDirection: 'row',
        gap: 12,
    },
    shareButton: {
        borderRadius: 12,
        overflow: 'hidden',
    },
    shareButtonGradient: {
        flexDirection: 'row',
        alignItems: 'center',
        paddingHorizontal: 16,
        paddingVertical: 10,
    },
    shareButtonText: {
        color: 'white',
        fontSize: 14,
        fontWeight: '600',
        marginLeft: 6,
    },
    expiryInfo: {
        flexDirection: 'row',
        alignItems: 'center',
        justifyContent: 'center',
        marginTop: 16,
        padding: 8,
        backgroundColor: colors.surface.light,
        borderRadius: 8,
    },
    expiryText: {
        fontSize: 12,
        color: colors.text.secondary,
        marginLeft: 6,
    },
    redeemedSection: {
        alignItems: 'center',
        paddingVertical: 20,
    },
    redeemedIcon: {
        marginBottom: 12,
    },
    redeemedIconGradient: {
        width: 80,
        height: 80,
        borderRadius: 40,
        justifyContent: 'center',
        alignItems: 'center',
    },
    redeemedTitle: {
        fontSize: 18,
        fontWeight: '700',
        color: colors.text.primary,
        marginBottom: 8,
        textAlign: 'center',
    },
    redeemedSubtitle: {
        fontSize: 14,
        color: colors.text.secondary,
        textAlign: 'center',
        lineHeight: 20,
    },
    redeemedDate: {
        fontSize: 12,
        color: colors.text.light,
        marginTop: 8,
    },
    emptyState: {
        flex: 1,
        justifyContent: 'center',
        alignItems: 'center',
        paddingVertical: 60,
    },
    emptyIconContainer: {
        width: 120,
        height: 120,
        borderRadius: 60,
        justifyContent: 'center',
        alignItems: 'center',
        marginBottom: 20,
    },
    emptyTitle: {
        fontSize: 20,
        fontWeight: '700',
        color: colors.text.primary,
        marginBottom: 8,
    },
    emptySubtitle: {
        fontSize: 14,
        color: colors.text.secondary,
        textAlign: 'center',
        marginBottom: 24,
        lineHeight: 20,
    },
    rewardsButton: {
        borderRadius: 16,
        overflow: 'hidden',
    },
    rewardsButtonGradient: {
        flexDirection: 'row',
        alignItems: 'center',
        paddingHorizontal: 24,
        paddingVertical: 16,
    },
    rewardsButtonText: {
        color: 'white',
        fontSize: 16,
        fontWeight: '700',
        marginLeft: 8,
    },
    instructionsCard: {
        borderRadius: 16,
        marginTop: 16,
        overflow: 'hidden',
        elevation: 4,
    },
    instructionsGradient: {
        padding: 20,
    },
    instructionsHeader: {
        flexDirection: 'row',
        alignItems: 'center',
        marginBottom: 16,
    },
    instructionsTitle: {
        fontSize: 16,
        fontWeight: '700',
        color: 'white',
        marginLeft: 8,
    },
    instructionsList: {
        gap: 12,
    },
    instructionItem: {
        flexDirection: 'row',
        alignItems: 'flex-start',
    },
    instructionNumber: {
        width: 24,
        height: 24,
        borderRadius: 12,
        backgroundColor: 'rgba(255,255,255,0.3)',
        color: 'white',
        fontSize: 12,
        fontWeight: '700',
        textAlign: 'center',
        textAlignVertical: 'center',
        marginRight: 12,
        paddingTop: 4,
    },
    instructionText: {
        flex: 1,
        fontSize: 14,
        color: 'rgba(255,255,255,0.9)',
        lineHeight: 20,
    },
});
